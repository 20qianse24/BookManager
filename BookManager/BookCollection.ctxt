#BlueJ class context
comment0.target=BookCollection
comment0.text=\n\ Holds\ a\ collection\ of\ books\ in\ a\ hashmap\n\ Allowes\ a\ user\ to\ add,\ delete,\ find,\ print\ all,\ edit\ likes\ from\ a\ menu\n\ prevent\ user\ from\ adding\ a\ duplicate?\n\n\ @author\ Serena.Q\n\ @version\ 07/04/25\n
comment1.params=
comment1.target=BookCollection()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ BooksCollection\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\n\ Main\ routine\n\ Console\ based\n
comment2.params=
comment2.target=void\ getBookInfo()
comment2.text=\n\ Gets\ book\ details\n\ Need\ to\ revise\ later\ and\ seperate\ error\ catching\ loops\ into\ seperate\ methods\n
comment3.params=bookId\ name\ author\ likes\ img
comment3.target=void\ addBook(long,\ java.lang.String,\ java.lang.String,\ int,\ java.lang.String)
comment3.text=\n\ Add\ a\ book\ to\ the\ collection\n
comment4.params=id
comment4.target=boolean\ findExistingId(long)
comment4.text=\n\ Finds\ a\ book\ based\ on\ the\ ID,\ checks\ if\ the\ library\ contains\ the\ given\ ID\ as\ a\ key\n\ @param\ id\ The\ ID\ to\ search\ for\n\ @return\ true\ if\ the\ book\ exists,\ false\ otherwise\n
comment5.params=name
comment5.target=boolean\ findBook(java.lang.String)
comment5.text=\n\ Check\ for\ an\ existing\ book\ using\ ISBN\n\ Sets\ the\ current\ book\ instance\ if\ found\n\ @\ return\ boolean\ false\ if\ not\ found\n
comment6.params=
comment6.target=void\ returnBook()
comment6.text=\n\ Returns\ book\ found\ from\ title\n
comment7.params=
comment7.target=Book\ getBook()
comment7.text=\n\ Gets\ the\ current\ book\ instance\n
comment8.params=
comment8.target=void\ printAll()
comment8.text=\n\ Prints\ all\ books\ and\ their\ details\n\ Console\ based\ interaction\n
comment9.params=
comment9.target=void\ menu()
comment9.text=\n\ Menu\ to\ print\ and\ call\ appropriate\ methods\n\ Console\ based\ menu\n
numComments=11
